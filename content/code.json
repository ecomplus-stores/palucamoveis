{
  "css": "#main > div.ecom-credits{\n  display:none;\n}",
  "html_head": "const securityHeaders = {\n        \"Content-Security-Policy\": \"upgrade-insecure-requests\",\n        \"Strict-Transport-Security\": \"max-age=1000\",\n        \"X-Xss-Protection\": \"1; mode=block\",\n        \"X-Frame-Options\": \"DENY\",\n        \"X-Content-Type-Options\": \"nosniff\",\n        \"Referrer-Policy\": \"strict-origin-when-cross-origin\"\n    },\n    sanitiseHeaders = {\n        Server: \"\"\n    },\n    removeHeaders = [\n        \"Public-Key-Pins\",\n        \"X-Powered-By\",\n        \"X-AspNet-Version\"\n    ];\n\nasync function addHeaders(req) {\n    const response = await fetch(req),\n        newHeaders = new Headers(response.headers),\n        setHeaders = Object.assign({}, securityHeaders, sanitiseHeaders);\n\n    if (newHeaders.has(\"Content-Type\") && !newHeaders.get(\"Content-Type\").includes(\"text/html\")) {\n        return new Response(response.body, {\n            status: response.status,\n            statusText: response.statusText,\n            headers: newHeaders\n        });\n    }\n\n    Object.keys(setHeaders).forEach(name => newHeaders.set(name, setHeaders[name]));\n\n    removeHeaders.forEach(name => newHeaders.delete(name));\n\n    return new Response(response.body, {\n        status: response.status,\n        statusText: response.statusText,\n        headers: newHeaders\n    });\n}\n\naddEventListener(\"fetch\", event => event.respondWith(addHeaders(event.request)));",
  "html_body": "<a id=\"seloEbit\" href=\"http://www.ebit.com.br/109374\" target=\"_blank\" data-noop=\"redir(this.href);\"></a> <script type=\"text/javascript\" id=\"getSelo\" src=\"https://imgs.ebit.com.br/ebitBR/selo-ebit/js/getSelo.js?109374\"> </script>"
}